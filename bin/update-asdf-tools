#!/usr/bin/env bash
set -e

version=0.0.0

bold=1
red=31
green=32
yellow=33
magenta=35
cyan=36
gray=90

function echo_color() {
  local color="$1"
  shift
  local message="$@"

  if is_interactive; then
    echo -e "\033[${color}m${message}\033[0m"
  else
    echo "$message"
  fi
}

function escape() {
  local value="$1"
  echo "$value" | sed 's/[.[\*^$()+?{|]/\\&/g'
}

function fail() {
  local code="$1"
  shift
  >&2 echo "$@"
  exit 1
}

function is_interactive() {
  test "${-#*i}" != "$-" || test -t 0 || test -n "$PS1"
}

function get_config_group() {
  local group="$1"

  echo "$config" \
    | grep "^\[$group\]$" -A 999 \
    | tail -n +2 \
    | grep -v "^ *#" \
    | grep -v "^ *$" \
    | sed "/^\[/q" \
    | sed "/^\[/d"
}

function get_config_values_in_group() {
  local group="$1"
  local key="$(escape "$2")"
  local operator="$(escape "$3")"

  get_config_group $group \
    | grep "^$key  *$operator  *" \
    | cut -d ' ' -f 2-999 \
    | sed "s/^ *//" \
    | sed "s/^$operator *//" \
    | sed "s/ *$//"
}

function filter_versions() {
  local subject="$1"
  local plugin="$2"
  local operator="$3"

  local grep_options="$grep_base_options"
  if echo "$operator" | grep -E '^\!' &>/dev/null; then
    grep_options="$grep_options -v"
  fi

  for regexp in `get_config_values_in_group "versions" "$plugin" "$operator"`; do
    test -n "$regexp" && subject="$(echo "$subject" | grep $grep_options -- "$regexp")"
  done

  printf "$subject"
}

function longest_column() {
  local text="$1"
  local column="$2"

  echo "$text" | \
    tr -s ' ' | \
    cut -d ' ' -f "$column" | \
    awk '{ print length }' | \
    sort -n -r -s | \
    head -n 1
}

function confirm() {
  local prompt="$1"
  printf "$prompt"
  read input
  printf "$input" | grep -E -i "^(n|no)$" >/dev/null && return 1
  printf "$input" | grep -E -i "^(y|yes)$" >/dev/null && return 0
  confirm "$prompt"
}

yes=

# Use "grep -P" if available, otherwise "grep -E".
grep_base_options="-E"
if `echo "1.2.3"|grep -P "\d+\.\d+\.\d+" &>/dev/null`; then
  grep_base_options="-P"
fi

positional_args=()
while [[ "$#" -gt 0 ]]; do
  option="$1"
  shift

  case "$option" in
    -y|--yes)
      yes=true
    ;;
    -v|--version)
      echo "$(basename "$0") $version"
      exit 0
    ;;
    *)
      positional_args+=("$option")
    ;;
  esac
done

# Restore positional parameters.
set -- "${positional_args[@]}"

config=
config_file="$HOME/.config/update-asdf-tools/update-asdf-tools.conf"
test -f "$config_file" && config=`cat "$config_file"`

echo
echo_color $yellow "Updating plugins..."
asdf plugin update --all

echo
echo_color $yellow "Checking available updates..."
current_versions=`asdf current 2>/dev/null`

longest_plugin_length=`longest_column "$current_versions" 1`
longest_version_length=`longest_column "$current_versions" 2`

updates=()

OLD_IFS="$IFS"
IFS=$'\n'
for current_version in $current_versions; do
  IFS="$OLD_IFS"

  trimmed="$(echo "$current_version"|tr -s ' ')"
  plugin="$(echo "$trimmed"|cut -d ' ' -f 1)"
  version="$(echo "$trimmed"|cut -d ' ' -f 2)"

  separator="   "
  padded_plugin="$(printf "%-${longest_plugin_length}s" "$plugin")"
  padded_version="$(printf "%-${longest_version_length}s" "$version")"
  printf "$(echo_color $bold "$padded_plugin")${separator}${padded_version}"

  fixed_version=`get_config_values_in_group "versions" "$plugin" "=" | tail -n 1`

  available_versions=`asdf list all $plugin 2>/dev/null`
  available_versions=`filter_versions "$available_versions" "*" "=~"`
  available_versions=`filter_versions "$available_versions" "$plugin" "=~"`
  available_versions=`filter_versions "$available_versions" "*" "!=~"`
  available_versions=`filter_versions "$available_versions" "$plugin" "!=~"`
  latest_version="$(echo "$available_versions" | tail -n 1)"

  if test -n "$fixed_version"; then
    if [[ "$version" == "$fixed_version" ]]; then
      printf "${separator}$(echo_color $cyan "$fixed_version")"
    else
      updates+=( "$plugin $fixed_version" )
      printf "${separator}$(echo_color $yellow "$fixed_version")"
    fi

    if [[ "$latest_version" != "$fixed_version" ]]; then
      echo "   $(echo_color $gray "$latest_version available")"
    fi
  elif [[ "$latest_version" == "" ]]; then
    echo "${separator}$(echo_color $red no matching version found)"
  elif [[ "$version" == "$latest_version" ]]; then
    echo "${separator}$(echo_color $green "$latest_version")"
  else
    updates+=( "$plugin $latest_version" )
    echo "${separator}$(echo_color $yellow "$latest_version")"
  fi

  IFS=$'\n'
done

IFS="$OLD_IFS"

if [[ ${#updates[@]} -eq 0 ]]; then
  echo
  echo_color $green "No updates available."
  echo
  exit 0
fi

echo
echo "Updates found: ${#updates[@]}"

if [ "$yes" != "true" ] && ! confirm "Proceed? [yes/no] "; then
  echo
  exit 0
fi

for update in "${updates[@]}"; do
  plugin="$(echo "$update" | cut -d ' ' -f 1)"
  version="$(echo "$update" | cut -d ' ' -f 2)"

  echo
  command="asdf install $plugin $version"
  echo_color $bold "$command"
  $command

  echo
  command="asdf global $plugin $version"
  echo_color $bold "$command"
  $command
done

echo
