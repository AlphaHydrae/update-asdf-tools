#!/usr/bin/env bash
set -e

function command_available() {
  local command="$1"
  command -v "$command" &>/dev/null
}

function fail() {
  >&2 echo "$@"
  exit 1
}

for required_command in dgstore gh git gzip jq sed sponge; do
  command_available "$required_command" || fail "$required_command command not found in PATH"
done

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
root_dir="$(dirname "$script_dir")"
bin_dir="${root_dir}/bin"
test -x "${bin_dir}/update-asdf-tools" || fail "Cannot find executable update-asdf-tools script in bin directory ${root_dir}"

test -z "$(git status --porcelain)" || fail "Commit changes before releasing"

current_version="$("${bin_dir}/update-asdf-tools" --version)"
version="$1"
[ $# -lt 1 ] && fail "The version to release must be provided as the first argument (current: $current_version)"
[ $# -gt 1 ] && fail "This script only takes one argument"
[[ "$version" =~ ^[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$ ]] || fail "Version '${version}' is not a valid semver version"

echo
echo "Updating version from ${current_version} to ${version}..."
sed -i '' "s/version=.*/version=${version}/" bin/update-asdf-tools
sed -i '' "s/badge.json?version=[0-9.]*/badge.json?version=${version}/" README.md
sed -i '' "s/v.*\/update-asdf-tools_v.*.gz/v${version}\/update-asdf-tools_v${version}.gz/" README.md
jq ".message = \"${version}\"" badge.json | sponge badge.json

echo
echo "Committing..."
git add badge.json bin/update-asdf-tools README.md
git commit -m "v${version}"

echo
echo "Creating tag v${version}..."
git tag "v${version}"

echo
echo "Pushing..."
git push --tags origin main

echo
echo "Preparing release..."
release_dir="${root_dir}/release"
test -d "$release_dir" && rm -f "${release_dir}/update-asdf-tools_"*
mkdir -p "$release_dir"
compressed_release_script="${release_dir}/update-asdf-tools_v${version}.gz"
cat "${bin_dir}/update-asdf-tools" | gzip -c > "${compressed_release_script}"
dgstore "$compressed_release_script"
signature_file="${compressed_release_script}.sig"
gpg --output "$signature_file" --detach-sign "$compressed_release_script"

echo
echo "Creating draft release..."
gh release create "v${version}" --draft --notes-file RELEASE.md --title "v${version}" release/update-asdf-tools_*

# Release to homebrew.
"$script_dir/homebrew"

open "$release_dir"
open "https://github.com/AlphaHydrae/update-asdf-tools/releases"
